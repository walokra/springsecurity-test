<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd"
	default-lazy-init="false">

    <security:http auto-config="true" access-decision-manager-ref="accessDecisionManager">
        <security:intercept-url pattern="/css/**" filters="none"/>
        <security:intercept-url pattern="/js/**" filters="none" />
        <security:intercept-url pattern="/images/**" filters="none" />
        <security:intercept-url pattern="/ws/**" filters="none" />

        <!-- Restrict URLs based on role -->
        <security:intercept-url pattern="/login*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/admin.jspx" access="SEC_ADMIN"/>
        <security:intercept-url pattern="/**" access="SEC_ADMIN,SEC_USER"/>

        <!-- Override default login and logout pages -->
        <!--<security:form-login login-page="/login.html" authentication-failure-url="/login.html" default-target-url="/index.jsp" />-->
        <security:logout logout-success-url="/login.html" invalidate-session="true" logout-url="/logout"/>
    </security:http>

    <security:authentication-provider user-service-ref="userDetailsService">
        <!--<security:password-encoder ref="passwordEncoder"/>-->
        <!--<security:password-encoder hash="sha"/>-->
    </security:authentication-provider>
    <beans:bean id="userDetailsService" class="com.ruleoftech.springsectest.service.CustomUserDetailsService"/>

    <beans:bean id="daoAuthenticationProvider" class="com.ruleoftech.springsectest.service.CustomAuthenticationProvider">
        <security:custom-authentication-provider />
        <!--<property name="saltSource" ref="saltSource"/>-->
        <!--<property name="passwordEncoder" ref="passwordEncoder"/>-->
    </beans:bean>

    <beans:bean id="accessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
        <beans:property name="decisionVoters">
            <beans:list>
                <beans:ref bean="roleVoter" />
                <beans:ref bean="authenticatedVoter" />
            </beans:list>
        </beans:property>
    </beans:bean>

    <beans:bean id="roleVoter" class="org.springframework.security.vote.RoleVoter">
        <beans:property name="rolePrefix" value="" />
    </beans:bean>

    <beans:bean id="authenticatedVoter" class="org.springframework.security.vote.AuthenticatedVoter" />

    <!-- test purposes -->
    <!--<security:user-service id="userDetailsService">-->
        <!--<security:user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" />-->
        <!--<security:user name="user" password="user" authorities="ROLE_USER" />-->
    <!--</security:user-service>-->

    <!--
    <beans:bean id="saltSource" class="org.springframework.security.providers.dao.salt.ReflectionSaltSource">
        <property name="userPropertyToUse" value="id"/>
    </beans:bean>
    <beans:bean id="passwordEncoder" class="org.springframework.security.providers.encoding.ShaPasswordEncoder" />
    -->

</beans>